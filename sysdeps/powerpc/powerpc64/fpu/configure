# This file is generated from configure.ac by Autoconf.  DO NOT EDIT!
 # Local configure fragment for sysdeps/powerpc/powerpc64/fpu/.


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC has VSX builtin functions" >&5
$as_echo_n "checking whether $CC has VSX builtin functions... " >&6; }
if ${libc_cv_cc_has_vsx+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

    #include <altivec.h>

    #ifndef __VSX__
    # error "compiler doesn't support VSX operations"
    #endif

    vector double foobar (vector double x)
    {
      vector double y;
      y[0] = x[1];
      y[1] = x[0];
      return y;
    }
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  libc_cv_cc_has_vsx=yes
else
  libc_cv_cc_has_vsx=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $libc_cv_cc_has_vsx" >&5
$as_echo "$libc_cv_cc_has_vsx" >&6; }

if test "$enable_mathvec" = "yes" -a "$libc_cv_cc_has_vsx" = "no"; then
  as_fn_error $? "mathvec needs GCC version 4.5 or later. Disable mathvec to build glibc." "$LINENO" 5
fi

if test "$enable_mathvec" != "no" -a "$libc_cv_cc_has_vsx" = "yes"; then
  build_mathvec=yes
fi
